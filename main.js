!function(){"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,n(o.key),o)}}function n(e){var n=function(e,n){if("object"!=t(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!=t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==t(n)?n:n+""}var r=function(){return t=function t(e,n,r,o,i,u){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this.handleCardClick=n,this._likes=e.likes,this._likesTotal=e.likes.length,this.handleCardDelete=r,this.owner=e.owner,this.userId=o,this._cardId=e._id,this.addLike=i,this.removeLike=u},(n=[{key:"_getTemplate",value:function(){return this._cardElement=document.querySelector("#template-elements").content.querySelector(".element").cloneNode(!0),this._cardElement}},{key:"_setProperties",value:function(){var t=this;this._card=this._getTemplate(),this._cardImage=this._card.querySelector(".element__image"),this._cardImage.alt="Fotografia de ".concat(this._name),this._cardImage.src=this._link,this._cardTitle=this._card.querySelector(".element__title").textContent=this._name,this._buttonLikeCard=this._card.querySelector(".element__button-like"),this._buttonDeleteCard=this._card.querySelector(".element__button-trash"),this.owner._id!==this.userId&&this._buttonDeleteCard.remove(),this.likesCount=this._card.querySelector(".element__likes").textContent=this._likesTotal,(this.userLike=this._likes.some((function(e){return e._id===t.userId})))?this._buttonLikeCard.classList.add("element__button-like_active"):this._buttonLikeCard.classList.remove("element__button-like_active")}},{key:"_handleLikebtn",value:function(){var t=this;this._buttonLikeCard.classList.contains("element__button-like_active")?this.removeLike(this._cardId).then((function(e){t.likesCount=t._card.querySelector(".element__likes").textContent=e.likes.length,t._buttonLikeCard.classList.remove("element__button-like_active")})).catch((function(t){return console.log(t)})):this.addLike(this._cardId).then((function(e){t._buttonLikeCard.classList.add("element__button-like_active"),t.likesCount=t._card.querySelector(".element__likes").textContent=e.likes.length})).catch((function(t){return console.log(t)}))}},{key:"handleOpenCard",value:function(){this.handleCardClick(this._cardTitle,this._link)}},{key:"handleDeleteCard",value:function(){this._card.remove()}},{key:"_setEventListeners",value:function(){var t=this;this._buttonLikeCard.addEventListener("click",(function(){t._handleLikebtn()})),this._buttonDeleteCard.addEventListener("click",(function(){t.handleCardDelete()})),this._cardImage.addEventListener("click",(function(){t.handleOpenCard()}))}},{key:"generateCard",value:function(){return this._setProperties(),this._setEventListeners(),this._card}}])&&e(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n}();function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,u(r.key),r)}}function u(t){var e=function(t,e){if("object"!=o(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==o(e)?e:e+""}var a=function(){return t=function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formElement=e,this._settings=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector)},(e=[{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(t){t.preventDefault()})),this._setEventListeners()}},{key:"_setEventListeners",value:function(){var t=this;this._toggleButtonState(),this._inputList.forEach((function(e){e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t,t.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?this._submitButton.classList.add(this._settings.inactiveButtonClass):this._submitButton.classList.remove(this._settings.inactiveButtonClass)}},{key:"_showInputError",value:function(t,e){this._errorElement=this._formElement.querySelector("#".concat(t.id,"-error")),this._errorElement.textContent=e,t.classList.add(this._settings.inputErrorClass),this._errorElement.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(t){this._errorElement=this._formElement.querySelector("#".concat(t.id,"-error")),this._errorElement.textContent="",t.classList.remove(this._settings.inputErrorClass),this._errorElement.classList.remove(this._settings.errorClass)}},{key:"resetValidation",value:function(){var t=this;this._inputList.forEach((function(e){t._hideInputError(e)})),this._toggleButtonState()}}])&&i(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,l(r.key),r)}}function l(t){var e=function(t,e){if("object"!=c(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==c(e)?e:e+""}var f=function(){return t=function t(e,n){var r=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=r,this._renderer=o,this._container=n},(e=[{key:"renderItems",value:function(){var t=this;this._renderedItems.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(t){this._container.append(t)}}])&&s(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}(),y=document.querySelector(".elements"),p=(document.querySelector("#popup-imagen"),document.querySelector("#button__close-showimage")),h=document.querySelector("#button__close-delete"),d=document.querySelector("#button__card-delete"),m=document.querySelector(".profile__edit-button"),b=document.querySelector(".profile__add-button"),v=document.querySelector(".profile__avatar-circle"),_=document.querySelectorAll(".popup__button-close"),g=Array.from(document.querySelectorAll(".form")),k=(document.querySelector(".form__button-save"),document.querySelector("form__button-addimage"),document.querySelector("#profile-name")),S=document.querySelector("#profile-aboutme"),E=document.querySelector("#change-avatar"),w={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__error_visible"};function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function j(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,L(r.key),r)}}function L(t){var e=function(t,e){if("object"!=C(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=C(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==C(e)?e:e+""}var P=function(){return t=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupElement=document.querySelector(e),this._overlay=document.querySelector("#cover")},(e=[{key:"open",value:function(){this._popupElement.classList.add("popup-show"),this._overlay.classList.add("popup__overlay")}},{key:"close",value:function(){this._popupElement.classList.remove("popup-show"),this._overlay.classList.remove("popup__overlay")}},{key:"_handleEscClose",value:function(t){"Escape"===t.key&&this.close()}},{key:"setEventListeners",value:function(){var t=this;this._overlay.addEventListener("click",(function(){t.close()})),_.forEach((function(e){e.addEventListener("click",(function(){t.close()}))})),p.addEventListener("click",(function(){t.close()})),h.addEventListener("click",(function(){t.close()})),document.addEventListener("keydown",(function(e){t._handleEscClose(e)}))}}])&&j(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function I(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,T(r.key),r)}}function T(t){var e=function(t,e){if("object"!=O(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==O(e)?e:e+""}function q(t,e,n){return e=A(e),function(t,e){if(e&&("object"==O(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,U()?Reflect.construct(e,n||[],A(t).constructor):e.apply(t,n))}function U(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(U=function(){return!!t})()}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=A(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},B.apply(null,arguments)}function A(t){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},A(t)}function D(t,e){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},D(t,e)}var x=function(t){function e(t,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(r=q(this,e,[t])).handleFormSubmit=n,r._formElement=r._popupElement.querySelector(".popup"),r._inputList=Array.from(r._formElement.querySelectorAll(".form__input")),r._submitButtons=r._formElement.querySelector(".form__button"),r._getInputValues=r._getInputValues.bind(r),r}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&D(t,e)}(e,t),n=e,(r=[{key:"_getInputValues",value:function(){var t=this;return this.formValues={},this._inputList.forEach((function(e){t.formValues[e.name]=e.value})),this.formValues}},{key:"close",value:function(){B(A(e.prototype),"close",this).call(this),this._formElement.reset(),"place"===this._submitButtons.name?this._submitButtons.textContent="Crear":this._submitButtons.textContent="Guardar"}},{key:"_handleLoading",value:function(){this._submitButtons.textContent="Guardando..."}},{key:"setEventListeners",value:function(){var t=this;B(A(e.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(e){e.preventDefault(),t.handleFormSubmit(t._getInputValues()),t._handleLoading()}))}}])&&I(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(P);function R(t){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},R(t)}function V(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,N(r.key),r)}}function N(t){var e=function(t,e){if("object"!=R(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==R(e)?e:e+""}var G=function(){return t=function t(e){var n=e.name,r=e.about,o=e.avatar,i=e.id;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userName=n,this._userAboutme=r,this._userAvatar=o,this._userId=i,this.profileName=document.querySelector(".profile__name"),this.profileAbout=document.querySelector(".profile__about-me"),this.profileAvatar=document.querySelector(".profile__avatar"),this.userValues={name:"",about:""}},(e=[{key:"getUserInfo",value:function(){return this.userValues.name=this.profileName.textContent,this.userValues.about=this._userAboutme,this.userValues}},{key:"setUserInfo",value:function(t){this._userName=t.name,this.profileName.textContent=t.name,this._userAboutme=t.about,this.profileAbout.textContent=t.about,this._userAvatar=t.avatar,this.profileAvatar.style.backgroundImage="url(".concat(t.avatar,")"),this._userId=t._id}},{key:"setUserAvatar",value:function(t){this.profileAvatar.style.backgroundImage="url(".concat(t.avatar,")")}}])&&V(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function F(t){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},F(t)}function H(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,J(r.key),r)}}function J(t){var e=function(t,e){if("object"!=F(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=F(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==F(e)?e:e+""}var z=function(){return t=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.baseUrl=e.baseUrl,this.headers=e.headers},(e=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{method:"GET",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"editUserInfo",value:function(t){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:t.name,about:t.about})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"addNewCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:t.name,link:t.link})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"likeCard",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"removeCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}},{key:"addLikeCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(t),{method:"PUT",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){return t}))}},{key:"removeLikeCard",value:function(t){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(t),{method:"DELETE",headers:this.headers}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))})).then((function(t){return t}))}},{key:"editUserAvatar",value:function(t){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:t.avatar})}).then((function(t){return t.ok?t.json():Promise.reject("Error: ".concat(t.status))}))}}])&&H(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();function M(t){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},M(t)}function K(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,Q(r.key),r)}}function Q(t){var e=function(t,e){if("object"!=M(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=M(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==M(e)?e:e+""}function W(t,e,n){return e=Z(e),function(t,e){if(e&&("object"==M(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,X()?Reflect.construct(e,n||[],Z(t).constructor):e.apply(t,n))}function X(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(X=function(){return!!t})()}function Y(){return Y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=Z(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},Y.apply(null,arguments)}function Z(t){return Z=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},Z(t)}function $(t,e){return $=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},$(t,e)}var tt=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=W(this,e,[t])).handleCardClick=n.handleCardClick.bind(n),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&$(t,e)}(e,t),n=e,(r=[{key:"handleCardClick",value:function(t,n){this._showImage=document.querySelector(".popup-imagen__review"),this._showSubtitle=document.querySelector(".popup-imagen__subtitle"),this._showImage.alt="Fotografia de ".concat(t),this._showImage.src=n,this._showSubtitle.textContent=t,Y(Z(e.prototype),"open",this).call(this)}},{key:"close",value:function(){Y(Z(e.prototype),"close",this).call(this)}},{key:"setEventListeners",value:function(){Y(Z(e.prototype),"setEventListeners",this).call(this)}}])&&K(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(P);function et(t){return et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},et(t)}function nt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,rt(r.key),r)}}function rt(t){var e=function(t,e){if("object"!=et(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=et(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==et(e)?e:e+""}function ot(t,e,n){return e=at(e),function(t,e){if(e&&("object"==et(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(t,it()?Reflect.construct(e,n||[],at(t).constructor):e.apply(t,n))}function it(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(it=function(){return!!t})()}function ut(){return ut="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!{}.hasOwnProperty.call(t,e)&&null!==(t=at(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},ut.apply(null,arguments)}function at(t){return at=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},at(t)}function ct(t,e){return ct=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},ct(t,e)}var st=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=ot(this,e,[t])).deleteConfirmationBtn=document.querySelector("#button__card-delete"),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&ct(t,e)}(e,t),n=e,(r=[{key:"close",value:function(){ut(at(e.prototype),"close",this).call(this)}},{key:"setHandleDelete",value:function(t){this.handleDelete=t}},{key:"setEventListeners",value:function(){var t=this;ut(at(e.prototype),"setEventListeners",this).call(this),this.deleteConfirmationBtn.addEventListener("click",(function(){t.deleteConfirmationBtn.textContent="Guardando...",t.handleDelete()}))}}])&&nt(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(P);document.getElementById("header-logo").src="50fce9df697a07971411.svg";var lt=new z({baseUrl:"https://around.nomoreparties.co/v1/web_es_11",headers:{authorization:"d71d6b20-43e5-4a1a-bc6b-4b351d1b9544","Content-Type":"application/json; charset=UTF-8"}}),ft=new G({name:"",about:"",avatar:"",id:""});lt.getUserInfo().then((function(t){ft.setUserInfo(t)}));var yt=new tt("#popup-imagen"),pt=new st("#popup-delete");function ht(t){var e=new r(t,yt.handleCardClick,(function(){pt.open(),pt.setHandleDelete((function(){lt.removeCard(t._id).then((function(){e.handleDeleteCard()})).catch((function(t){console.log(t)})).finally((function(){d.textContent="Si",pt.close()}))}))}),ft._userId,lt.addLikeCard.bind(lt),lt.removeLikeCard.bind(lt));return e}function dt(){g.forEach((function(t){new a(t,w).enableValidation()}))}function mt(){g.forEach((function(t){new a(t,w).resetValidation()}))}function bt(){g.forEach((function(t){new a(t,w)._toggleButtonState()}))}yt.setEventListeners(),pt.setEventListeners(),lt.getInitialCards().then((function(t){var e=new f({items:t,renderer:function(t){var n=ht(t).generateCard();e.addItem(n)}},y);e.renderItems()})).catch((function(t){console.log(t)}));var vt=new x("#popup-profile",(function(t){lt.editUserInfo(t).then((function(t){ft.setUserInfo(t)})).catch((function(t){console.log(t)})).finally((function(){vt.close()}))})),_t=new x("#popup-addimage",(function(t){lt.addNewCard(t).then((function(t){var e=ht(t).generateCard();y.prepend(e)})).catch((function(t){console.log(t)})).finally((function(){_t.close()}))}));m.addEventListener("click",(function(){vt.open(),lt.getUserInfo().then((function(t){ft.setUserInfo(t);var e=ft.getUserInfo();k.value=e.name,S.value=e.about,dt()})).catch((function(t){console.log(t)})),bt(),mt()})),b.addEventListener("click",(function(){_t.open(),dt(),bt(),mt()}));var gt=new x("#popup-change_avatar",(function(t){lt.editUserAvatar(t).then((function(t){E.value=ft.setUserAvatar(t)})).catch((function(t){console.log(t)})).finally((function(){gt.close()}))}));v.addEventListener("click",(function(){gt.open(),dt(),bt(),mt()})),vt.setEventListeners(),_t.setEventListeners(),gt.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,